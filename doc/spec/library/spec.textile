h3. User
* Name
* Id
* Set {CalendarEntry.Id}
* Set {TaskId.Id}

h4. functionality
* create User
** create also Auth.User
* delete User
** delete also all CalenderEntry's with User.Id from
** remove also User.Id from Task
** remove also Auth.User
* update
* add CalendarEntry
** create new CalendarEntry with CalendarEntry.Id
** add CalendarEntry.Id to User
** add also User.Id to CalendarEntry
* find User by Id

h3. CalendarEntry
* Id
* Description
* Date
* User.Id
* Set {Task.Id}

h4. functionality
* delete CalendarEntry with CalendarEntry.Id
** remove also CalendarEntry.Id from User
** also execute Task.delete for all Task.Id
* update
* add Task to CalendarEntry
** create Task
** add TaskId to CalendarEntry
** Task is belonging to a CalendarEntry and has no User.Ids at begin
* find CalendarEntry by Id

h3. Task
* id
* description
* Set {User.Id}

h4. functionality
* delete Task
** remove TaskId from CalendarEntry
** remove TaskId from User
* update
* add User with Id to Task
** add TaskId to User
* remove User with Id from Task
** remove TaskId from User
* find Task by Id


h2. API

h3. User
* create /authenticate/authentication-methods/password/account
* read /users, /users/me, /users/id
* update /users/me
* delete /users/me

h3. Calendar
* create /calendarentries
* read /calendarentries/id /calendarentries
* update /calendarentries/id
* delete /calendarentries/id

h3. Task
* create /calendarentries/id/tasks
* read /calendarentries/id/tasks/id /calendarentries/id/tasks
* update /calendarentries/id/tasks/id
* delete /calendarentries/id/tasks/id